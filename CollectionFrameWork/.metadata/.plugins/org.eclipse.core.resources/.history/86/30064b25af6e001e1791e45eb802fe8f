package com.thread;

public class ThreadLifeCycle implements Runnable
{

	@Override
	public void run() 
	{
		myTask();
		
		ThreadLifeCycle t=new ThreadLifeCycle();
		Thread th3=new Thread(t);
		th3.start();
		System.out.println("-----------------");
		System.out.println(th3.getState());
		System.out.println("-----------------");
		try {
			th3.join();
			
		} 
		catch (InterruptedException e)
		{
			 Thread.currentThread().interrupt();
	            e.printStackTrace();
			
		}
		
		System.out.println(ThreadLifeCycle.th3.getstate());
		
	}
	
	synchronized public static void myTask()
	{
		while(true)
		{
			
		}
		
	}
	public static void main(String[] args) throws InterruptedException {
		ThreadLifeCycle t=new ThreadLifeCycle();
		Thread th1=new Thread(t);
		Thread th2=new Thread(t);
		System.out.println(th2.getState());
		th1.start();
		th2.start();
		System.out.println(th2.getState());
		Thread.sleep(1000);
		System.out.println(th2.getState());
		
		
	}
	

}
