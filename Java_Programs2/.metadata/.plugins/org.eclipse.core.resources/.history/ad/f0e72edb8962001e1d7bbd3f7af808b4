package com.jsp;

import java.util.Scanner;

public class MinimizeS 
{
	  public static void main(String[] args) {
	        Scanner scanner = new Scanner(System.in);
	        // Read the input
	        int k = scanner.nextInt();
	        int m = scanner.nextInt();
	        // Initialize the maximum chunk size
	        int maxChunkSize = 0;
	        // Initialize the current chunk size
	        int currentChunkSize = 0;
	        // Initialize the current chunk index
	        int currentChunkIndex = 1;
	        // Iterate over all K-digit binary numbers
	        for (int i = 0; i < (1 << k); i++) {
	            // Add the next K-digit binary number to the current chunk
	            currentChunkSize++;
	            // If the current chunk size is greater than the maximum chunk size, update the maximum chunk size
	            if (currentChunkSize > maxChunkSize) {
	                maxChunkSize = currentChunkSize;
	            }
	            // If the current chunk size is equal to 2^K, start a new chunk
	            if (currentChunkSize == (1 << k)) {
	                currentChunkSize = 0;
	                currentChunkIndex++;
	            }
	        }
	        // Print the maximum chunk size
	        System.out.println(maxChunkSize);
	    }

}
