package com.jsp;

import java.util.Scanner;

public class MinimizeS 
{
	public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        // Read the input values
        int K = input.nextInt();
        int M = input.nextInt();

        // Calculate the size of each chunk
        int chunkSize = (int) Math.pow(2, K) / M;

        // Initialize the maximum number of 1's in any chunk
        int maxOnes = 0;

        // Iterate through the chunks
        for (int i = 0; i < M; i++) {
            // Calculate the start and end of the chunk
            int start = i * chunkSize;
            int end = start + chunkSize - 1;

            // Count the number of 1's in the current chunk range
            int ones = countOnes(start, end);

            // Update the maximum number of 1's if needed
            if (ones > maxOnes) {
                maxOnes = ones;
            }
        }

        // Output the minimum S (maximum number of 1's in any chunk)
        System.out.println(maxOnes);
    }

    // Function to count the number of 1's in the binary numbers within a range
    public static int countOnes(int start, int end) {
        int count = 0;
        for (int i = start; i <= end; i++) {
            // Convert the number to binary and count the 1's
            String binary = Integer.toBinaryString(i);
            count += binary.chars().filter(ch -> ch == '1').count();
        }
        return count;
    }

}
